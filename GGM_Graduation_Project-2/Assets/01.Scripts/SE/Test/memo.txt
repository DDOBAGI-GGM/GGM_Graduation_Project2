using System.Collections.Generic;

int nowChatIndex = 0;

public void SortIndex()     // 인덱스를 정렬한다.
{
    nowChatIndex = 1;

    bool is_firstChatEnd = false;
    List<Node> askNodes = new List<Node>();     // 질문 담은 곳
    int askIndex = 0;

    nodes.ForEach(n =>
    {
        var children = GetChildren(n);
        if (children.Count == 0) askIndex++;
        children.ForEach(c =>
        {
            if (c is ChatNode == false)     // 챗팅노드가 아니면 첫번째챗팅은 끝남.
            {
                is_firstChatEnd = true;
                askNodes.Add(c);

                AskNode askNode = c as AskNode;
                if (askNode != null)
                {
                    askNode.reply.Clear();
                }

                LockAskNode lockAskNode = c as LockAskNode;
                if (lockAskNode != null)
                {
                    lockAskNode.reply.Clear();
                }
            }
            else if (c is ChatNode && is_firstChatEnd)
            {
                // 질문 대답 쳇팅들 나옴.
                AskNode askNode = askNodes[askIndex] as AskNode;
                if (askNode != null)
                {
                    ChatNode chatNode = c as ChatNode;
                    if (chatNode != null)
                    {
                        Chat chat = new Chat();
                        chat.text = chatNode.text;
                        chat.state = chatNode.state;
                        chat.face = chatNode.face;
                        chat.textEvent = chatNode.textEvent;
                        askNode.reply.Add(chat);
                    }
                }

                LockAskNode lockAskNode = askNodes[askIndex] as LockAskNode;
                if (lockAskNode != null)
                {
                    ChatNode chatNode = c as ChatNode;
                    if (chatNode != null)
                    {
                        Chat chat = new Chat();
                        chat.text = chatNode.text;
                        chat.state = chatNode.state;
                        chat.face = chatNode.face;
                        chat.textEvent = chatNode.textEvent;
                        lockAskNode.reply.Add(chat);
                    }
                }
            }

            c.index = nowChatIndex;
            c.indexLabel.text = nowChatIndex.ToString();
            nowChatIndex++;
        });
    });
}

노드의 자식을 가져오면서 DFS, BFS 돌려주기
일단 기본 쳇팅 노드에서는 인덱스랑 라벨에 있는거만 바꿔주고
쳇팅 노드의 자식이 2 이상이면 불값을 켜준다음에 쳇팅이 아닌 것을 가져와서
질문들의 리스트를 초기화 시켜줌, 그러면서 큐에도 넣어줌 
(얘내도 while 문 기본적으로 사용하는데 질문노드까지 다 넣으면 끝나게 해주자.
질문노드가 없는 경우... 보다는 지금 노드의 자식이 없는경우 break)
그리고 큐에서 빼면서 자식 가져와서 노드에 넣어줌. while 문 사용해서. (무한루프 안돌아)







루트 노드에서 있어야할 이벤트가 또 뭐가 있을까
일단 이 질문들이 모두 끝나면 다음 챕터로 넘어가는 이벤트가 필요해보임.
이건 불값을 해서 체크하면 아래에 이동 될 챕터의 인덱스를 적어주게 해주기


대화가 넘어갔다가 다시 왔다가를 어떻게 표현하지?
질문노드에서 멈출거니까 해결. 기록하는것도 따로 있음.
질문 노드를 썼는지 판단하는 불값도 있고


지금 질문들이 모두 끝났다는 걸 어떻게 알지?
질문의 개수를 세는 것이 필요함 -> ChatContainer의 SortContatiner 함수에서 세어주기
세어서 리스트에 넣어줘야함.
이 리스트의 for 문을 돌아서 전부 사용된 질문이면 이 챕터가 끝났다는 것을 알 수 있음.