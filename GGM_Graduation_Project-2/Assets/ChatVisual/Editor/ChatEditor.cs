using ChatVisual;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEditor;
using UnityEngine.UIElements;
using System;

public class ChatEditor : EditorWindow
{
    [SerializeField]
    private VisualTreeAsset treeAsset = null;           // UI ????????????????????밸쫫?????욱룏??

    private ChatView chatView;        // ???????????????????????ル뒌?? ????????????
    private InspectorView inspectorView;        // ??饔낅떽?????癲??????Β?レ름??????汝뷴젆?琉????
    private HierarchyView hierarchyView;      // ?????諛몃마????????쑩??癲ル슢???????⑤벡???GUI, ?????獄쏅챶留????耀붾굝?????????? ?????곌떽釉붾???????
    private Button arrayAddBtn;
    private Button dangerBtn;

    private ChatContainer chatContainer;

    [MenuItem("ChatSystem/ChatEditor")]
    public static void OpenWindow()
    {
        GetWindow<ChatEditor>("ChatEditor");
    }

    private void OnDestroy()
    {
        //if (chatContainer != null)
        //{
            //chatView.SaveChatSystem();      // ?耀붾굝????????????耀붾굝????????雅?굛肄???????? ??? ?????????嚥〓끃異???????ㅻ쿋????????
        //}
    }

    public void CreateGUI()
    {
        VisualElement root = rootVisualElement;     // ????룸ħ瑗???????룹궛???????μ떜媛?걫?????????

        // UXML ?耀붾굝???????????欲꼲????
        VisualElement template = treeAsset.Instantiate();
        template.style.flexGrow = 1;        // ????椰?????????쒙쭫??????????????????????????傭?끆??????猷???????
        root.Add(template);

        var styleSheet = AssetDatabase.LoadAssetAtPath<StyleSheet>("Assets/ChatVisual/Editor/ChatEditor.uss");
        root.styleSheets.Add(styleSheet);       // ????????關?쒎첎?嫄?嶺뚮슢梨뜹ㅇ??????ル뒌???????

        chatView = root.Q<ChatView>("chat-view");
        inspectorView = root.Q<InspectorView>("inspector-view");        // ??饔낅떽?????癲???????????????????????ル뒌????饔낅떽?????嶺뚮ㅎ?닺짆?汝뷴젆?????
        hierarchyView = root.Q<HierarchyView>("hierarchy-view");       // ?????獄쏅챶留????????ル뒌????饔낅떽?????嶺뚮ㅎ?닺짆?汝뷴젆?????hierarchy ??
       
        arrayAddBtn = root.Q<Button>("AddBtn");     // ????????????ル뒌????饔낅떽?????嶺뚮ㅎ?닺짆?汝뷴젆?????
        arrayAddBtn.tooltip = "Chapter Add";
        arrayAddBtn.clickable.clicked += OnArrayAddBtn;
        dangerBtn = root.Q<Button>("ClearBtn");
        dangerBtn.tooltip = "All Nodes Delete";
        dangerBtn.clickable.clicked += OnClearNodes;

        chatView.OnNodeSelected += OnSelectionNodeChanged;      // ??饔낅떽?????怨뚮옩鴉딅퀫??????????뉙뀭????汝뷴젆?琉???????????????????????饔낅떽??????

        OnSelectionChange();
    }

    private void OnArrayAddBtn()
    {
        if (chatContainer != null)
        {
            Debug.Log("Add human");
            hierarchyView.UpdateHierarchy(chatContainer, chatView);
        }
    }

    private void OnClearNodes()
    {
        if (chatContainer != null)
        {
            Debug.Log("Delete all nodes");
        }
    }

    private void OnSelectionNodeChanged(NodeView nodeView)
    {
        //chatView.SaveChatSystem();
        inspectorView.UpdateInspector(nodeView);        // ????饔낅떽?????怨뚮옩鴉딅퀫????????????μ쪚?????饔낅떽?????癲???????????????
    }

    private void OnSelectionChange()        // ??????? ????????거?뜮?????????癲ル슢캉???????살퓚???노돗???????壤굿??Β?????μ떜媛?걫?????
    {
        if (Selection.activeGameObject != null)
        {
            if (Selection.activeGameObject.TryGetComponent<ChatContainer>(out chatContainer))      // ?????곌떽釉붾????????耀붾굝????????????????ル뒌????饔낅떽?????嶺뚮ㅎ?닺짆?汝뷴젆?????
            {
                // The current chat is an assistant's chat
                chatContainer.nowHumanName = "Assistant";
                chatContainer.nowChatNodeList = chatContainer.HumanAndChatDictionary["Assistant"];

                //hierarchyView.UpdateHierarchy(chatContainer, chatView);      // ?????곌떽釉붾????????耀붾굝???????????欲꼲????

                chatView.LoadChatData(chatContainer);     // ?????????????癲????ル㎦??????欲꼲????
                chatView.PopulateView();           // ?????????? ???????癲??됀??????????????곕츥????????耀붾굝???????????欲꼲????

                //Debug.Log($"Human count : {chatContainer.HumanAndChatDictionary.Count}");
            }
        }
    }
}
